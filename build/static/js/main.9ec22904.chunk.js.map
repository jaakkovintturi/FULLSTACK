{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","console","log","axios","get","newObject","post","id","put","delete","then","response","data","Add","props","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","onClick","addInformation","type","Notification","message","className","Person","person","msg","persons","name","number","window","confirm","includes","personService","setTimeout","Persons","setPersons","setNewMessage","useEffect","length","map","App","useState","setNewName","setNewNumber","newMessage","event","target","preventDefault","nameObject","names","existingPerson","find","p","note","catch","error","filter","n","concat","i","delete1","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ec22904.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  console.log('jee')\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\nconst deleteNumber = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update,\n  deleteNumber: deleteNumber\n}\n","\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\nconst Add = (props) => {\n  return (\n  <div>\n    <p>name:</p> <input \n      value={props.newName}\n      onChange={props.handleNameChange}/>\n    <p>number:</p> <input \n      value={props.newNumber}\n      onChange={props.handleNumberChange}/>\n      <button onClick={props.addInformation} type=\"submit\">add</button>\n  </div>\n  )\n}\nconst Notification = ( { message } ) => {\n\tif ( message === null ) {\n\t\treturn null;\n\t}\n\telse return (\n\t\t<div className=\"notification\">\n\t\t\t{ message }\n\t\t</div>\n\t);\n}\nconst Person = ( {person, msg, persons} ) => {\n\n  const confirmation = () => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      if(persons.includes(person)) {\n      personService \n      .deleteNumber(person.id)\n      console.log('Person deleted.')\n    } \n      msg(`${person.name} deleted.`)\n      setTimeout(() => {\n        msg(null)\n      }, 2500)\n    }\n  \n}\n\n  return (\n      <tr>\n          <td>{person.name}</td>\n          <td>{person.number}</td>\n          <td><button onClick={confirmation} type=\"submit\">delete</button></td>\n          \n      </tr>\n          \n  )\n}\n\n\nconst Persons = ({setPersons, persons, setNewMessage}) => {\n\n  useEffect(() => {\n\n    const getPersons = () => {\n    personService\n      .getAll()\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n    }\n    getPersons();\n  }, [])\n\n  console.log('render', persons.length, 'notes')\n\n  return (\n      <table>\n          <tbody>\n              {persons.map(person => <Person key={person.name} person={person} msg={setNewMessage} persons={persons}/>)}\n          </tbody>\n      </table>\n  )\n}\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newMessage, setNewMessage ] = useState(null)\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  \n\nconst addInformation = (event) => {\n  event.preventDefault()\n  const nameObject = {\n    name: newName,\n    number: newNumber\n  }\n\n  const names = persons.map(person => person.name);\n  const existingPerson = persons.find(p => p.name === nameObject.name)\n   \n\n  const changeNumber = () => {\n    personService\n    .update(existingPerson.id, nameObject)\n    .then(response => response.data)\n    .then(response => {\n      setPersons(persons.map(note => note.name !== nameObject.name ? note : response))\n    })\n    .catch(error => {\n      setNewMessage(`Information of '${nameObject.name}' has already been removed from server`)\n      setTimeout(() => {\n        setNewMessage(null)\n      }, 4000)\n      setPersons(persons.filter(n => (n.id) !== existingPerson.id))\n\n    })\n   \n  }\n\n  if(!(names.includes(newName)) && newNumber!==\"\") {\n    setPersons(persons.concat(nameObject))\n  setNewName('')\n  setNewNumber('')\n\n  setNewMessage(`LisÃ¤ttiin ${newName}`)\n  console.log(nameObject.id)\n  setTimeout(() => {\n    setNewMessage(null)\n  }, 2500)\n  personService\n  .create(nameObject)\n  .then(response => {\n    console.log(response)\n  })\n}\n    else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n    changeNumber()\n    }\n}\n\nconst gone = () => {\n  if (window.confirm(`Delete all the names?`)) { \n    for (let i = 0; i < persons.length; i++) {\n    let delete1 = persons[i]\n    personService \n    .deleteNumber(delete1.id)\n    \n}console.log('Persons deleted.')\n}\n\n\n}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {newMessage}/>\n      <form>\n       <Add handleNumberChange={handleNumberChange} newNumber={newNumber}  \n       handleNameChange={handleNameChange}\n       newName={newName} addInformation = {addInformation}/>\n      </form>\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} setNewMessage={setNewMessage}/>\n      <button onClick={gone} type=\"submit\">delete all</button>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}